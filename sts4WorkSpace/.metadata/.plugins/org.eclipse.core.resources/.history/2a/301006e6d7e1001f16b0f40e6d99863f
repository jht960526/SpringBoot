package com.example.demo.onetomany;

import java.util.List;

import org.hibernate.event.spi.EventManager.CacheActionDescription;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Getter @Setter @ToString
@Builder
@AllArgsConstructor @NoArgsConstructor

@Entity
@Table(name = "tbl_pdsboard")
public class PDSBoard {
	
	@Id // 필수
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long pid;
	private String pname;
	private String pwriter;
	
	// cascade는 부모의 DML이 자식에 영향을 미친다.
	// fetch는 부모의 조회 시 자식이 조회된다. (EAGER)
	// fetch는 부모의 조회 시 자식이 조회되지않음 (LAZY)
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER)
	@JoinColumn(name ="pdsno") //tbl_pdsfile에 컬럼이 생성된다.
	List<PDSFileEntity> files;
}

// 하나의 board는 여러개의 file를 갖는다.
/* joincolumn의 설정이 업스면 중간table이 생긴다.
  create table tbl_pdsfile (
        fno bigint not null auto_increment,
        filename varchar(255),
        primary key (fno)
    ) engine=InnoDB
 */
